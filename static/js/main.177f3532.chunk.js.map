{"version":3,"sources":["TicTacToe.js","App.js","util/boardUtil.js","reportWebVitals.js","index.js"],"names":["moves","TicTacToe","useContext","BoardContext","board","setBoard","useState","player","setPlayer","style","background","display","width","height","flexDirection","justifyContent","alignItems","color","borderBottom","map","row","rowIndex","item","colIndex","border","onClick","updated","produce","draftState","answer","lines","i","length","a","b","c","d","e","f","checkWinner","window","alert","location","reload","fontWeight","React","createContext","App","use","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.177f3532.chunk.js","sourcesContent":["import { useContext, useState } from \"react\";\nimport { BoardContext } from \"./App\";\nimport produce from \"immer\";\n\nlet moves = 0;\nfunction TicTacToe() {\n  let { board, setBoard } = useContext(BoardContext);\n  let [player, setPlayer] = useState(0);\n  \n  let checkWinner = (board) => {\n    const lines = [\n      [\n        [0, 0],\n        [0, 1],\n        [0, 2],\n      ],\n      [\n        [0, 0],\n        [1, 1],\n        [2, 2],\n      ],\n      [\n        [0, 0],\n        [1, 0],\n        [2, 0],\n      ],\n      [\n        [0, 1],\n        [1, 1],\n        [2, 1],\n      ],\n      [\n        [0, 2],\n        [1, 1],\n        [2, 0],\n      ],\n      [\n        [0, 2],\n        [1, 2],\n        [2, 2],\n      ],\n      [\n        [1, 0],\n        [1, 1],\n        [1, 2],\n      ],\n      [\n        [2, 0],\n        [2, 1],\n        [2, 2],\n      ],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [[a, b], [c, d], [e, f]] = lines[i];\n      if (\n        board[a][b] === board[c][d] &&\n        board[a][b] === board[e][f] &&\n        board[a][b] != -1\n      ) {\n        return player;\n      }\n    }\n    return null;\n  };\n  return (\n    <div\n      style={{\n        background: \"#0c0e61\",\n        display: \"flex\",\n        width: \"100vw\",\n        height: \"100vh\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n      }}\n    >\n      <div>\n        <h2\n          style={{\n            color: \"cyan\",\n            borderBottom: \"3px dotted cyan\",\n          }}\n        >\n          {\" \"}\n          Tic-Tac-Toe\n        </h2>\n      </div>\n      <div>\n        <h5\n          style={{\n            color: \"cyan\",\n          }}\n        >\n          Current Player: {player == 0 ? \"First\" : \"Second\"}\n        </h5>\n      </div>\n      {board.map(function (row, rowIndex) {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          >\n            {row.map(function (item, colIndex) {\n              return (\n                <div\n                  style={{\n                    width: \"100px\",\n                    height: \"100px\",\n                    border: \"2px solid cyan\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                  }}\n                  onClick={function () {\n                    const updated = produce(board, (draftState) => {\n                      if (draftState[rowIndex][colIndex] == -1) {\n                        draftState[rowIndex][colIndex] = player;\n                      }\n                    });\n                    let answer = checkWinner(updated);\n                    moves++;\n                    if (answer != null || moves == 9) {\n                      if(answer == null && moves == 9){\n                        window.alert(\n                          \"Unfortunately the game is Tied. Try once more ! :)\"\n                        );\n                      }else{\n                        window.alert(\n                          \"Winner is \" + (answer == 1 ? \"Second\" : \"First\")\n                        );\n                      }\n                      window.location.reload();\n                    }\n                    setBoard(updated);\n                    setPlayer(player == 0 ? 1 : 0);\n                  }}\n                >\n                  <p\n                    style={{\n                      color: \"cyan\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    {item == -1 ? \" \" : item == 1 ? \"X\" : \"0\"}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default TicTacToe;\n","import React, { useState } from \"react\";\nimport TicTacToe from \"./TicTacToe\";\nimport { createBoard } from \"./util/boardUtil\";\n\nlet BoardContext = React.createContext();\nfunction App() {\n  let use = createBoard();\n  let [board, setBoard] = useState(use);\n\n  return (\n    <BoardContext.Provider value={{ board, setBoard }}>\n      <TicTacToe />\n    </BoardContext.Provider>\n  );\n}\n\nexport { App, BoardContext };\n","let createBoard = function(){\r\n    let board = [\r\n        [-1,-1,-1],\r\n        [-1,-1,-1],\r\n        [-1,-1,-1],\r\n    ];\r\n\r\n    return board;\r\n}\r\n\r\nexport {createBoard};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}